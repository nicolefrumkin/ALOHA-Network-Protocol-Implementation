channel.c is the main channel program. It listens for incoming connections from multiple servers on a given port. When a server connects and sends a packet, the channel receives it and forwards it to all other connected servers. The channel uses a time slot mechanism with select() to simulate time-based transmission. If more than one server sends data in the same time slot, the channel treats it as a collision and sends a "NOISE" message to everyone instead of the actual data. It keeps track of each server's IP address, port number, number of packets sent, number of collisions, and average bandwidth. At the end, it prints a summary report of all the connected servers and their stats.


server.c is the server-side program. It connects to the channel using the given IP and port and reads a file to send it in small chunks called frames. Each frame is packed like a simple Ethernet frame with MAC addresses, ethertype, and payload. The server sends each frame to the channel and waits for a response. If it receives a different message or nothing at all, it assumes a collision happened. It then waits using exponential backoff before trying again. It gives up on a frame after 10 failed attempts. The server measures how many packets were sent successfully, how many attempts it took, how long the whole transfer took, and calculates the bandwidth. In the end, it prints a detailed result including whether the transfer was successful or not.
